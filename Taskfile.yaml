version: '3'
tasks:
  format:
    deps: [build_erlfmt]
    sources:
      - ./src/*.erl
      - ./tests/*.erl
    cmds:
      - thirdparty/erlfmt/bin/erlfmt --write "./src/*.erl" "./tests/*.erl"
  gradualize:
    aliases: [type-check]
    deps: [build_gradualizer]
    sources:
      - "./src/*.erl"
    cmds:
      - for: sources
        cmd: ./thirdparty/Gradualizer/bin/gradualizer "{{ .ITEM }}"
  dialyze:
    deps: [setup_dialyzer]
    sources:
      - "src/*.erl"
    cmds:
      - dialyzer --src src/*.erl --plt ./.plt
  build-debug:
    aliases: [build]
    sources:
      - ./src/*.erl
      - ./tests/*.erl
    deps: [bin, format, gradualize, dialyze]
    cmds:
      - erlc +debug_info -DDEBUG -o bin ./src/*.erl ./tests/*.erl
  test:
    deps: [build-debug]
    silent: true
    cmds:
      - for: ['lexer', 'parser']
        cmd: echo "Testing {{ .ITEM }} module..."; erl -pa bin -noshell -s {{ .ITEM }} test -s erlang halt
  run-*:
    deps: [build-debug]
    vars:
      TARGET: '{{index .MATCH 0}}'
    cmds:
      - escript bin/{{.TARGET}}.beam {{.CLI_ARGS}}
  thirdparty:
    run: once
    status:
      - test -d ./thirdparty
    cmds:
      - mkdir ./thirdparty
  bin:
    run: once
    status:
      - test -d ./bin
    cmds:
      - mkdir ./bin
  download_gradualizer:
    deps: [thirdparty]
    dir: thirdparty
    status:
      - '[ {{ .COMMIT }} == $(cat {{ .GENERATES }}/commit) ]'
    vars:
      COMMIT: '112646d85d0cc20364a56184ab30fb8d63a4a63f'
      SOURCE: 'https://github.com/josefs/Gradualizer/archive/{{ .COMMIT }}.zip'
      GENERATES: 'Gradualizer'
    generates:
      - '{{ .GENERATES }}'
    cmds:
      - curl -L "{{ .SOURCE }}" -o "{{ .GENERATES }}.zip"
      - unzip "{{ .GENERATES }}"
      - mv "{{ .GENERATES }}-{{ .COMMIT }}" "{{ .GENERATES }}"
      - echo "{{ .COMMIT }}" > "{{ .GENERATES }}/commit"
      - rm "{{ .GENERATES }}.zip"
  build_gradualizer:
    dir: 'thirdparty/Gradualizer'
    deps: [download_gradualizer]
    vars:
      GENERATES: './bin/gradualizer'
      SOURCE: './src'
    generates:
      - '{{ .GENERATES }}'
    sources:
      - '{{ .SOURCE }}'
    cmds:
      - make escript
  download_erlfmt:
    deps: [thirdparty]
    dir: thirdparty
    status:
      - '[ {{ .COMMIT }} == $(cat {{ .GENERATES }}/commit) ]'
    vars:
      COMMIT: '32b2f06cda4d7b5d59c86f4689fc9039a894730c'
      SOURCE: 'https://github.com/WhatsApp/erlfmt/archive/32b2f06cda4d7b5d59c86f4689fc9039a894730c.zip'
      GENERATES: 'erlfmt'
    generates:
      - '{{ .GENERATES }}'
    cmds:
      - curl -L "{{ .SOURCE }}" -o "{{ .GENERATES }}.zip"
      - unzip "{{ .GENERATES }}"
      - mv "{{ .GENERATES }}-{{ .COMMIT }}" "{{ .GENERATES }}"
      - curl "https://raw.githubusercontent.com/jcomellas/getopt/2ce84394e4c3970d66f26f04f76a4e1b71c8636c/src/getopt.erl"
        -o "{{ .GENERATES }}"/src/getopt.erl
      - echo "{{ .COMMIT }}" > "{{ .GENERATES }}/commit"
      - rm "{{ .GENERATES }}.zip"
  prune: rm -rf .task .plt thirdparty bin
  build_erlfmt:
    dir: 'thirdparty/erlfmt'
    deps: [download_erlfmt]
    vars:
      GENERATES: './bin/erlfmt'
      SOURCE: './src'
    generates:
      - '{{ .GENERATES }}'
    sources:
      - '{{ .SOURCE }}'
    cmds:
      - mkdir -p ebin
      - erl -eval "yecc:file(\"src/erlfmt_parse.yrl\"), halt()." -noshell
      - erlc -o ebin src/*.erl
      - mkdir -p bin
      - sed "1s/^/#!\/usr\/bin\/env escript\n%%! +sbtu +A0 -sname erlfmt -pa .\/thirdparty\/erlfmt\/ebin\
        -noinput -noshell -mode minimal\n/" ebin/erlfmt.beam > ./bin/erlfmt
      - chmod +x bin/erlfmt
  setup_dialyzer:
    vars:
      GENERATES: './.plt'
      APPS: 'erts kernel stdlib mnesia compiler crypto parsetools'
    status:
      - test -e "{{ .GENERATES }}"
    cmds:
      - dialyzer --build_plt --output_plt "{{ .GENERATES }}" --apps {{ .APPS }}
  repl:
    deps: [build]
    cmds:
      - erl -pa bin
  download_escriptize:
    deps: [thirdparty]
    dir: thirdparty
    status:
      - '[ {{ .COMMIT }} == $(cat {{ .GENERATES }}/commit) ]'
    vars:
      COMMIT: 'd27715c993eb82fe0f28260560f76836a3e8f9e7'
      SOURCE: 'https://github.com/rlipscombe/escriptize/archive/{{ .COMMIT }}.zip'
      GENERATES: 'escriptize'
    generates:
      - '{{ .GENERATES }}'
    cmds:
      - curl -L "{{ .SOURCE }}" -o "{{ .GENERATES }}.zip"
      - unzip "{{ .GENERATES }}"
      - mv "{{ .GENERATES }}-{{ .COMMIT }}" "{{ .GENERATES }}"
      - echo "{{ .COMMIT }}" > "{{ .GENERATES }}/commit"
      - rm "{{ .GENERATES }}.zip"
  build_escriptize:
    dir: 'thirdparty/escriptize'
    deps: [download_gradualizer]
    vars:
      GENERATES: './escriptize'
      SOURCE: './src'
    generates:
      - '{{ .GENERATES }}'
    sources:
      - '{{ .SOURCE }}'
    cmds:
      - make escriptize
